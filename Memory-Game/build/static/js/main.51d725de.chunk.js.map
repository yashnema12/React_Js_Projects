{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","_ref","card","handleChoice","flipped","disabled","React","createElement","className","src","alt","onClick","handleClick","cardImages","matched","App","cards","setCards","useState","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","sort","Math","random","map","_objectSpread","id","useEffect","prevCards","resetTurn","setTimeout","console","log","prevTurns","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAGe,SAASA,EAAUC,GAAsC,IAArCC,KAACA,EAAIC,aAACA,EAAYC,QAACA,EAAOC,SAACA,GAASJ,EAOnE,OACIK,IAAAC,cAAA,OAAKC,UAAU,QACnBF,IAAAC,cAAA,OAAKC,UAAWJ,EAAU,UAAU,IAChCE,IAAAC,cAAA,OAAKC,UAAU,QAAQC,IAAKP,EAAKO,IAAKC,IAAI,eAC1CJ,IAAAC,cAAA,OACAC,UAAU,OACVC,IAAI,iBACJE,QAZeC,KACXP,GACAF,EAAaD,IAWjBQ,IAAI,gBCbZ,MAAMG,EAAY,CAChB,CAACJ,IAAM,oBAAoBK,SAAS,GACpC,CAACL,IAAM,oBAAoBK,SAAS,GACpC,CAACL,IAAM,kBAAoBK,SAAS,GACpC,CAACL,IAAM,oBAAoBK,SAAS,GACpC,CAACL,IAAM,oBAAoBK,SAAS,GACpC,CAACL,IAAM,mBAAoBK,SAAS,IA4FvBC,MAxFf,WACE,MAAOC,EAAOC,GAAWC,mBAAS,KAC3BC,EAAOC,GAAWF,mBAAS,IAC3BG,EAAUC,GAAgBJ,mBAAS,OACnCK,EAAUC,GAAgBN,mBAAS,OACnCb,EAASoB,GAAiBP,oBAAS,GAItCQ,EAAcA,KAClB,MAAMA,EAAc,IAAIb,KAAeA,GAItCc,KAAK,IAAMC,KAAKC,SAAW,IAC3BC,IAAK5B,GAAI6B,wBAAA,GAAQ7B,GAAI,IAAE8B,GAAIJ,KAAKC,YAEjCP,EAAa,MACbE,EAAa,MACbP,EAASS,GACTN,EAAS,IAILjB,EAAgBD,IACrBmB,EAAYG,EAAatB,GAAQoB,EAAapB,IAK/C+B,oBAAU,KACLZ,GAAaE,IACbE,GAAY,GAEVJ,EAAUZ,MAAQc,EAAUd,KAC7BQ,EAASiB,GACAA,EAAUJ,IAAI5B,GAChBA,EAAKO,MAAQY,EAAUZ,IACxBsB,wBAAA,GAAU7B,GAAI,IAACY,SAAS,IAEjBZ,IAIbiC,KAGAC,WAAW,IAAKD,IAAY,OAGhC,CAACd,EAAUE,IAEbc,QAAQC,IAAItB,GAGZ,MAAMmB,EAAYA,KAChBb,EAAa,MACbE,EAAa,MACbJ,EAASmB,GAAYA,EAAY,GACjCd,GAAY,IAQZ,OAJFQ,oBAAU,KACRP,KACA,IAGEpB,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,UAAQI,QAASe,GAAc,YAE/BpB,IAAAC,cAAA,OAAKC,UAAU,aACZQ,EAAMc,IAAI5B,GACTI,IAAAC,cAACP,EAAU,CACXwC,IAAKtC,EAAK8B,GACV9B,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASmB,GAAanB,IAASqB,GAAarB,EAAKY,QAC1DT,SAAUA,MAIdC,IAAAC,cAAA,SAAG,UAAQY,KC7FjBsB,IAASC,OACPpC,IAAAC,cAACD,IAAMqC,WAAU,KACfrC,IAAAC,cAACQ,EAAG,OAEN6B,SAASC,eAAe","file":"static/js/main.51d725de.chunk.js","sourcesContent":["import './SingleCard.css'\r\nimport React from 'react'; \r\n\r\nexport default function SingleCard({card,handleChoice,flipped,disabled}){\r\n\r\n    const handleClick =() =>{\r\n        if(!disabled){\r\n            handleChoice(card)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"card\">    \r\n    <div className={flipped ? 'flipped':\"\"}>\r\n        <img className=\"front\" src={card.src} alt=\"card front\" />\r\n        <img  \r\n        className=\"back\" \r\n        src=\"/img/cover.png\" \r\n        onClick={handleClick}\r\n        alt=\"card back\" \r\n        />\r\n    </div>  \r\n    </div>  \r\n    \r\n    )\r\n}","import React from 'react'; \nimport { useEffect, useState } from 'react'\nimport './App.css'\nimport SingleCard from './components/SingleCard';\n\nconst cardImages =[\n  {\"src\":\"/img/helmet-1.png\",matched: false},\n  {\"src\":\"/img/potion-1.png\",matched: false},\n  {\"src\":\"/img/ring-1.png\"  ,matched: false},\n  {\"src\":\"/img/scroll-1.png\",matched: false},\n  {\"src\":\"/img/shield-1.png\",matched: false},\n  {\"src\":\"/img/sword-1.png\" ,matched: false},\n]\n/*array with 'src' [property path] */\n\nfunction App() {\n  const [cards, setCards] =useState([])\n  const [turns, setTurns] =useState(0)\n  const [choiceOne,setChoiceOne] = useState(null)\n  const [choiceTwo,setChoiceTwo] = useState(null)\n  const [disabled,setDisabled] =   useState(false)\n\n\n//shuffle cards\nconst shuffleCards =() =>{\n  const shuffleCards =[...cardImages, ...cardImages]\n  //with spread it can access the arrays - 12 total\n\n\n  .sort(() => Math.random() - 0.5)\n  .map((card)=>({...card, id: Math.random() }))\n\n  setChoiceOne(null)\n  setChoiceTwo(null) \n  setCards(shuffleCards)\n  setTurns(0)\n}\n\n//handle a choice\nconst handleChoice = (card)=>{\n choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n\n}\n\n//compare two select cards\nuseEffect(()=>{\n  if(choiceOne && choiceTwo){\n     setDisabled(true)\n\n    if(choiceOne.src === choiceTwo.src){\n      setCards(prevCards =>{\n        return prevCards.map(card =>{\n          if(card.src === choiceOne.src){\n            return{...card,matched: true}\n          }else{\n            return card\n          }\n        })\n      })\n      resetTurn()\n    }else{\n      \n      setTimeout(()=> resetTurn(),1000)\n    }\n  }\n},[choiceOne,choiceTwo])\n\nconsole.log(cards)\n\n//reset choice & increase turn\nconst resetTurn = () =>{\n  setChoiceOne(null)\n  setChoiceTwo(null)\n  setTurns(prevTurns=> prevTurns + 1)\n  setDisabled(false)\n}\n\n//start a new game automatically\nuseEffect(()=>{\n  shuffleCards()\n},[])\n\n  return (\n    <div className='App'>\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New game</button>\n\n      <div className=\"card-grid\">\n        {cards.map(card =>(\n          <SingleCard \n          key={card.id} \n          card={card} \n          handleChoice={handleChoice}          \n          flipped={card === choiceOne || card === choiceTwo || card.matched}\n          disabled={disabled}\n          />\n        ))}\n      </div>\n      <p>Turns: {turns}</p>\n    </div>\n  )\n} \n\nexport default App\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}